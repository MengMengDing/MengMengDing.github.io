[{"title":"html、css杂记","date":"2017-03-08T06:11:08.000Z","path":"2017/03/08/html、css杂记/","text":"html、css遇到的零碎问题 1.路径 相对路径 ./ 当前目录下寻找 ../ 当前目录外边一层目录寻找 绝对路径 / 从/后开始寻找 2. 空div如何撑开？123&lt;div class=&quot;a&quot;&gt; &lt;div class=&quot;b&quot;&gt;&lt;/div&gt; &lt;/div&gt; 在a中定义宽高 100% 在b中定义 positiong 为 absolute 再定义宽高即可撑开。 3.paddingpadding：a b c d ; 对应的方向为 上右下左。 4.列表 html中的列表标签 &lt;ol&gt; 标签定义有序列表&lt;ul&gt;是无序 ol会自动加上1.2.3.的顺序 5.img 在标签中直接有 width和height属性可直接设置。但不建议使用 6.checkbox和单选按钮 radiocheckbox多选 &lt;input name=&quot;love&quot; type=&quot;checkbox&quot; id=&quot;aa&quot; value=&quot;音乐&quot; /&gt; &lt;input name=&quot;love&quot; type=&quot;checkbox&quot; id=&quot;aa&quot; value=&quot;运动&quot; /&gt; 单选按钮 男性： 女性：","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"JavaScript 应用（一）","date":"2017-03-08T06:10:38.000Z","path":"2017/03/08/JavaScript-应用（一）/","text":"js遇到过的零碎问题总结 从cookie判断是否登录过 1234567891011121314151617181920212223242526272829303132var id = $.cookie(&apos;session_id&apos;); // alert(id); if(!id)&#123; //alert(&quot;用户没有登录&quot;); window.location.href=&quot;\\\\webControl\\\\login.html&quot;; &#125; else &#123; $.ajax(&#123; url: &apos;http://192.168.1.127/index2.html&apos;, type: &apos;GET&apos;, data: JSON.stringify(&#123;Command:&quot;GetScrGroupSettings&quot;,GroupId:1&#125;), dataType: &apos;json&apos;, success: function (data) &#123; //返回指定数据格式，解析,成功后跳转 if (data.Status == &quot;Ok&quot;) &#123; //wte // $.cookie(&apos;a&apos;, data.ScreenGroup); window.location.href = &apos;test1.html&apos;; alert(id); &#125; else &#123; alert(data.Message); &#125; &#125;, error: function () &#123; alert(&apos;请求超时&apos;); &#125; &#125;) &#125; 登陆后返回一个session-id。如果取到就说明登陆过没有就跳转到login页面， 2.each$.each(a,f); 对数组A中的每个元素都执行一遍函数f。 3.服务器访问ajax访问服务器，并解析josn123456789101112131415161718192021$.ajax(&#123; url: &apos;http://192.168.1.127/index2.html&apos;, type: &apos;GET&apos;, headers: &#123;&apos;session_id&apos;: id&#125;, data: &#123;Command: &apos;GetAllIpCam&apos;&#125;, dataType: &apos;json&apos;, success: function (response) &#123; var IpcGroups = response, allIpCam = [],url = [],id = [], j,x,y; if (IpcGroups) &#123; var allIpGroup = new Array(&#123;IpcArray: new Array(), Name: 0&#125;); alert(IpcGroups.length); $.each(IpcGroups, function (i, el) &#123; alert(i); alert(el.Url); document.getElementById(&quot;reWrite&quot;).innerHTML =&quot; &quot;; &#125;) &#125;","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"瞎折腾的官网（四）","date":"2017-03-08T06:10:05.000Z","path":"2017/03/08/瞎折腾的官网（四）/","text":"记一下不明所以的高阶轮子 实现生态系统特效： 请忽略掉滑稽的蜜汁微笑，手动滑稽；附上大神的轮子。 没错这就是太阳系魔改而来。源码自取说一下原理。transform: rotate(360deg); 这个属性是关键。默认旋转的都是元素的左上角，那么把旋转圆心改为中间的太阳就行了。控制旋转的速度就能做出这样的太阳系效果。记录一个简化版的上代码 css： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125body&#123; background-color: #d4a254; margin: 0; padding: 0; /*overflow: hidden;*/&#125;.main&#123; margin: 0; padding: 0; /*width: 100%;*/ /*height: 75%;*/ width: 100%; height: 78%; position: absolute; top: 0; color: #f85f73; background-color: #283c63;&#125;.galaxy&#123; /*width: 1300px;*/ /*height: 700px;*/ width: 100%; height: 100%; background-color: #a854b4; position: relative; left: auto; right: auto; margin-left:auto; margin-right:auto; padding: 0;&#125;.galaxy div&#123; position: absolute;&#125;div[class*=track]&#123; border: 1px solid #f5f5f5; margin-left: -3px; margin-top: -3px;&#125;.re&#123; width: 100%; height: 100%; animation: unrotation 10s linear infinite;&#125;.re2&#123; width: 100%; height: 100%; animation: unrotation 10s linear infinite;&#125;.mars&#123; /*background-color: #3551ff;*/ width: 200px; height: 200px; top: 250px; left: 850px; animation: rotation 10s linear infinite; transform-origin: -200px 100px; /** 仔细说一下这玩意到底怎么计算 transform-origin: a b ; 现在 公转半径半径 R=300 图片大小为 p=200 顺时针 a= -（ R - p/2） 逆时针 a= R + p/2 b值不变 b = p / 2 注意怎么让图片在公转时候一直朝上呢？ animation: rotation 10s linear infinite; 公转为10s一圈那么想一直朝上就需要图片有个等同速度的反方向自传 animation: unrotation 10s linear infinite; */&#125;.mars2&#123; width: 200px; height: 200px; top: 250px; right: 850px; animation: rotation 10s linear infinite; transform-origin: 400px 100px;&#125;.mars-track&#123; width: 600px; height: 600px; border-radius: 300px; left: 350px; top: 50px;&#125;.footer&#123; position: absolute; bottom: 0; width: 100%; height: 13%; background-color: #000; color: #fbe8d3; padding: 0; text-align: center;&#125;.footer a&#123; color: #ffa058; text-decoration:none;&#125;.foot-text&#123; position: relative; top: 60%;&#125;/*自转*/@keyframes rotation&#123; to&#123; transform: rotate(360deg); &#125;&#125;@keyframes unrotation&#123; to&#123; transform: rotate(-360deg); &#125;&#125; html： 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;link href=&quot;css/main.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;script src=&quot;js/main.js&quot; &gt;&lt;/script&gt; &lt;title&gt;Leo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;main&quot;&gt; &lt;div class=&quot;galaxy&quot;&gt; &lt;div class=&apos;mars-track&apos;&gt;&lt;/div&gt; &lt;a href=&quot;./html/leo/leo.html&quot;&gt; &lt;div class=&apos;mars&apos;&gt; &lt;img class=&quot;re&quot; src=&quot;./images/leo.png&quot;&gt; &lt;/div&gt; &lt;/a&gt; &lt;a href=&quot;./html/leia/leia.html&quot;&gt; &lt;div class=&apos;mars2&apos;&gt; &lt;img class=&quot;re&quot; src=&quot;./images/leia.png&quot;&gt; &lt;/div&gt; &lt;/a&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 注意 12345678910.mars&#123; /*background-color: #3551ff;*/ width: 200px; height: 200px; top: 250px; left: 850px; animation: rotation 10s linear infinite; transform-origin: -200px 100px; &#125; 仔细说一下这玩意到底怎么计算 transform-origin: a b ; 现在 公转半径半径 R=300 图片大小为 p=200 顺时针 a= -（ R - p/2） 逆时针 a= R + p/2 b值不变 b = p / 2 注意怎么让图片在公转时候一直朝上呢？ animation: rotation 10s linear infinite; 公转为10s一圈那么想一直朝上就需要图片有个等同速度的反方向自传 animation: unrotation 10s linear infinite;","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"瞎折腾的官网（三）","date":"2017-03-08T06:09:59.000Z","path":"2017/03/08/瞎折腾的官网（三）/","text":"本篇主要对一些折腾过程中零碎的问题进行总结。 #1.菱形图片问题 要知道是没有菱形的图片的。而是像这样 这样的话5个菱形摆造型的时候透明部分会相互重叠，这样点击事件无法判断。解决方案就是上上篇说的，搞了一个菱形div透明的放在图片的菱形部分，加一个onclick。这样点击其他透明部分也无法出发事件了。 #2.导航栏透明和固定上方background: rgba(40,60,99, 1); 最后一个参数就是透明度； 导航栏固定; position:fixed； 然后将top值设置为0即可，但是仅仅使用position:fixed还是不够，因为IE6浏览器并不支持，所以还需要进行浏览器兼容性设置，那就是添加以下代码即可: position:absolute;/* 把导航栏位置定义为绝对位置 关键*/ top:expression(documentElement.scrollTop + &quot;px&quot;); /* 把导航栏位置放在浏览 器垂直滚动条的顶端 关键 */ #3.导航栏二级菜单基础样式 #main { position: relative; list-style: none; background: #6BBE92; font-weight: 400; font-size: 0; text-transform: uppercase; display: inline-block; padding: 0; margin: 50px auto; } #main li { font-size: 0.8rem; display: inline-block; position: relative; padding: 15px 20px; cursor: pointer; z-index: 5; min-width: 120px; } li { margin: 0; } .drop { overflow: hidden; list-style: none; position: absolute; padding: 0; width: 100%; left: 0; top: 48px; } .drop div { -webkit-transform: translate(0, -100%); -moz-transform: translate(0, -100%); -ms-transform: translate(0, -100%); transform: translate(0, -100%); -webkit-transition: all 0.5s 0.1s; -moz-transition: all 0.5s 0.1s; -ms-transition: all 0.5s 0.1s; transition: all 0.5s 0.1s; position: relative; } .drop li { display: block; padding: 0; width: 100%; background: #f85f73 !important; /*下拉菜单颜色*/ } .drop li a{ font-family: 宋体; color:#fbe8d3; text-decoration:none; font-weight:100; font-size:1.5em; display:block; text-align:center; } 接下来就是悬停动画还有线条跟随效果。 #marker { height: 6px; background: #3E8760 !important; /*底部线条颜色*/ position: absolute; bottom: 0; width: 120px; z-index: 2; -webkit-transition: all 0.35s; -moz-transition: all 0.35s; -ms-transition: all 0.35s; transition: all 0.35s; } #main li:nth-child(1):hover ul div { -webkit-transform: translate(0, 0); -moz-transform: translate(0, 0); -ms-transform: translate(0, 0); transform: translate(0, 0); } #main li:nth-child(1):hover ~ #marker { -webkit-transform: translate(0px, 0); -moz-transform: translate(0px, 0); -ms-transform: translate(0px, 0); transform: translate(0px, 0); } #main li:nth-child(2):hover ul div { -webkit-transform: translate(0, 0); -moz-transform: translate(0, 0); -ms-transform: translate(0, 0); transform: translate(0, 0); } #main li:nth-child(2):hover ~ #marker { -webkit-transform: translate(120px, 0); -moz-transform: translate(120px, 0); -ms-transform: translate(120px, 0); transform: translate(120px, 0); } #main li:nth-child(3):hover ul div { -webkit-transform: translate(0, 0); -moz-transform: translate(0, 0); -ms-transform: translate(0, 0); transform: translate(0, 0); } #main li:nth-child(3):hover ~ #marker { -webkit-transform: translate(240px, 0); -moz-transform: translate(240px, 0); -ms-transform: translate(240px, 0); transform: translate(240px, 0); } #main li:nth-child(4):hover ul div { -webkit-transform: translate(0, 0); -moz-transform: translate(0, 0); -ms-transform: translate(0, 0); transform: translate(0, 0); } #main li:nth-child(4):hover ~ #marker { -webkit-transform: translate(360px, 0); -moz-transform: translate(360px, 0); -ms-transform: translate(360px, 0); transform: translate(360px, 0); } html代码。很简单就不介绍了。 &lt;nav class=&quot;all&quot;&gt; &lt;ul id=&quot;main&quot;&gt; &lt;li&gt;&lt;a href=&quot;#home&quot;&gt;主页&lt;/a&gt; &lt;ul class=&quot;drop&quot;&gt; &lt;div&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;t1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;t2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;t3&lt;/a&gt;&lt;/li&gt; &lt;/div&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;关于我们 &lt;ul class=&quot;drop&quot;&gt; &lt;div&gt; &lt;li&gt;scss&lt;/li&gt; &lt;li&gt;jquery&lt;/li&gt; &lt;li&gt;html&lt;/li&gt; &lt;/div&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;项目分类 &lt;ul class=&quot;drop&quot;&gt; &lt;div&gt; &lt;li&gt;scss&lt;/li&gt; &lt;li&gt;jquery&lt;/li&gt; &lt;li&gt;html&lt;/li&gt; &lt;/div&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;联系我们&lt;/li&gt; &lt;div id=&quot;marker&quot;&gt;&lt;/div&gt; &lt;/ul&gt; &lt;/nav&gt;","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"瞎折腾的官网（二）","date":"2017-03-08T06:09:53.000Z","path":"2017/03/08/瞎折腾的官网（二）/","text":"上一篇写了布局和菱形变换，这一次说说特效。 网页太死板，要duangduang的加特效，先加了三个特效。一个是五棱形载入，一个是鼠标悬停线条环绕，一个是div上下浮动（天空之城效果）。效果没办法放展示图片 #1.五菱形载入。 先上代码 123456789101112131415161718192021222324252627&lt;div id=&quot;box&quot; class=&quot;box&quot;&gt; &lt;div class=&quot;ling_1 animated &quot;&gt; &lt;div class=&quot;ling&quot; onclick=&quot;tuch1()&quot;&gt;&lt;/div&gt; &lt;img class=&quot;hiding&quot; src=&quot;images/ling.png&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ling_2 animated &quot;&gt; &lt;div class=&quot;ling&quot; onclick=&quot;tuch2()&quot;&gt;&lt;/div&gt; &lt;img class=&quot;hiding&quot; src=&quot;images/ling.png&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ling_3 animated &quot;&gt; &lt;div class=&quot;ling &quot; onclick=&quot;tuch3()&quot;&gt;&lt;/div&gt; &lt;img class=&quot;hiding&quot; src=&quot;images/ling.png&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ling_4 animated &quot;&gt; &lt;div class=&quot;ling &quot; onclick=&quot;tuch4()&quot;&gt;&lt;/div&gt; &lt;img class=&quot;hiding&quot; src=&quot;images/ling.png&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ling_5 animated &quot;&gt; &lt;div class=&quot;ling &quot; onclick=&quot;tuch5()&quot;&gt;&lt;/div&gt; &lt;img class=&quot;hiding&quot; src=&quot;images/ling.png&quot;&gt; &lt;/div&gt; &lt;/div&gt; 这种动画效果大多都需要animated 需要引入css&lt;link href=&quot;/css/animate.min.css&quot; rel=&quot;stylesheet&quot;&gt; 怎么下载就不写了自己百度。animate中有几个样式就能直接实现效果 fadeInUpBig fadeInDownBig fadeInLeftBig fadeInRightBig。 很直白的名字，从上方载入，从下方载入，从左侧载入和从右侧载入。直接在你的div里class 等于fadeInDownBig ; 就可以了。我要说的是动画冲突，因为后来又加了一个div上下浮动的效果。其中浮动效果设的是无限循环，和载入动画。所以出现了无限载入的情况。至于怎么解决看下边。 #2.div浮动&amp;动画冲突解决废话不说先上代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788.ling_1 &#123; animation:move1 3s infinite,fadeInRightBig 1s; -moz-animation:move1 3s infinite,fadeInRightBig 1s;/* Firefox */ -webkit-animation: move1 3s infinite,fadeInRightBig 1s; /* Safari and Chrome */ -o-animation:move1 3s infinite,fadeInRightBig 1s; /* Opera */ -webkit-animation-timing-function:linear; -webkit-animation-direction:alternate;&#125;@-webkit-keyframes fadeInRightBig &#123; 0% &#123; opacity: 0; -webkit-transform: translateX(2000px); &#125; 100% &#123; opacity: 1; -webkit-transform: translateX(0); &#125;&#125;@-moz-keyframes fadeInRightBig &#123; 0% &#123; opacity: 0; -moz-transform: translateX(2000px); &#125; 100% &#123; opacity: 1; -moz-transform: translateX(0); &#125;&#125;@-o-keyframes fadeInRightBig &#123; 0% &#123; opacity: 0; -o-transform: translateX(2000px); &#125; 100% &#123; opacity: 1; -o-transform: translateX(0); &#125;&#125;@keyframes fadeInRightBig &#123; 0% &#123; opacity: 0; transform: translateX(2000px); &#125; 100% &#123; opacity: 1; transform: translateX(0); &#125;&#125;@keyframes move1&#123; 0% &#123;bottom:4em; &#125; 25% &#123;bottom:4.5em; &#125; 50% &#123;bottom:5em; &#125; 75% &#123;bottom:5.5em; &#125; 100% &#123;bottom:6em; &#125;&#125;@-moz-keyframes move1/* Firefox */&#123; 0% &#123;bottom:4em; &#125; 25% &#123;bottom:4.5em; &#125; 50% &#123;bottom:5em; &#125; 75% &#123;bottom:5.5em; &#125; 100% &#123;bottom:6em; &#125;&#125;@-webkit-keyframes move1 /* Safari and Chrome */&#123; 0% &#123;bottom:4em; &#125; 25% &#123;bottom:4.5em; &#125; 50% &#123;bottom:5em; &#125; 75% &#123;bottom:5.5em; &#125; 100% &#123;bottom:6em; &#125;&#125;@-o-keyframes move1 /* Opera */&#123; 0% &#123;bottom:4em; &#125; 25% &#123;bottom:4.5em; &#125; 50% &#123;bottom:5em; &#125; 75% &#123;bottom:5.5em; &#125; 100% &#123;bottom:6em; &#125;&#125; 注意 @keyframes move1 就是浮动效果。我采用百分比的写法也可以 1234@-o-keyframes move55&#123; from&#123;bottom:4em; &#125; to&#123; bottom:6em; &#125;&#125; 效果一样，我用百分比是为了方便以后更改。 注意这一行 animation:move1 3s infinite,fadeInRightBig 1s; 我翻译一下：执行animation选择效果 move1 完成时间 3s 无限循环 ，再选择 fadeInRightBig 完成时间1s 不循环。这是一个animation执行两个动画，偶然间发现也不知道对不对，反正能用而且不冲突。不冲突前提是要像我一样重写那四个样式。 #3.鼠标悬停线条环绕翠花上代码css： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849*&#123;margin:0;padding:0&#125;.position&#123;margin-left:auto;margin-right:auto;text-align:center;margin-top:15%&#125;#workarea&#123; position:absolute; width:100%; height:100%;&#125;#personal&#123; color: #ffffff; text-decoration:none; position:absolute; bottom:15px; right:2%&#125;.spot&#123; position:absolute; bottom: 2px; width:100%; height:100%;&#125;.svg-wrapper&#123; margin-top:0; position:relative; width:150px; height:40px; display:inline-block; border-radius:3px; margin-left:5px; margin-right:5px&#125;#shape&#123; stroke-width:6px; fill:transparent; stroke:#f5f5f5; stroke-dasharray:90 400;/*线条断续。 a b ，a为线条长度 b部位线条断掉多少*/ stroke-dashoffset:-220; /*线条 停止的位置*/ transition:1s all ease&#125;.text&#123; margin-bottom:-10px; text-align:center; /*height:40px;*/ /*width:150px;*/&#125;.svg-wrapper:hover #shape&#123; stroke-dasharray:50 0; stroke-width:3px; stroke-dashoffset:0; stroke:#f57170&#125; html： 12345678&lt;div class=&quot;svg-wrapper&quot;&gt; &lt;svg height=&quot;40px&quot; width=&quot;150px&quot;&gt; &lt;rect id=&quot;shape&quot; height=&quot;40px&quot; width=&quot;150px&quot; &gt;&lt;/rect&gt; &lt;div class=&quot;text spot&quot; &gt; &lt;a href=&quot;#home&quot;&gt;主页&lt;/a&gt; &lt;/div&gt; &lt;/svg&gt;&lt;/div&gt; 以我现在的水平也只能知道怎么用了，我猜原理大约是：这个东西的动画效果，鼠标悬停触发 123456.svg-wrapper:hover #shape&#123; stroke-dasharray:50 0; stroke-width:3px; stroke-dashoffset:0; stroke:#f57170&#125; 这个效果，隔一段空间复制shape的长度。如果shape看成 - 那么复制后就是 - - - - - - - -这样。 1234567#shape&#123; stroke-width:6px; fill:transparent; stroke:#f5f5f5; stroke-dasharray:90 400;/*线条断续。 a b ，a为线条长度 b部位线条断掉多少*/ stroke-dashoffset:-220; /*线条 停止的位置*/ transition:1s all ease&#125; 这个是关键，有兴趣可以具体去看。怎么使用我已经在代码里注释出来了。","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"瞎折腾的官网（一）","date":"2017-03-08T06:09:45.000Z","path":"2017/03/08/瞎折腾的官网（一）/","text":"最近没怎么再看js。boss让写一个公司官网，不要后台。带着百度谷歌等小弟转战css。说说这一周以来遇到的问题。 1.boss设计集团官网首页为5菱形（公司logo）如图： 那么问题来了。当时初学不知道h5，以为div都是四四方方的矩形或者正方形，菱形不会画。 首先求助万能百度，于是就发现使用transform:rotate(9deg); 可以旋转div。括号里可以填旋转度数。于是顺手写了一个宽高相等的div旋转了45°。于是得到了这货： 可是我要的菱形不要这么宽，继续查找于是发现了这位 大神的作品： 看完我发现上学学的三角函数还有矩阵除了能买菜还能干这么多事（手动dog）；1transform: matrix(a, b, -c, d, e, f); 以表象来解释一下这6个值，先说最后两个函数是平移的x与y坐标。对我没用直接去掉变成transform: matrix(a, b, -c, d，0，0); 然后其中ac一组掌管如图ac两端的拉伸，越大你的菱形越胖。当|a|=|c|时候你的图形才可以是菱形； bd呢当然是bd端的拉伸，值越大你的菱形拉伸的越大； 菱形到这里就没了； 2.怎么布局-flex布局 初学不知道怎么定位好，偶然间博主看见了一篇文章：http://www.jianshu.com/p/7c4eca814055突然间世界开朗了。（后来才知道flex桌面支持不好） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103/*flex容器*/.box&#123; display: -webkit-flex; /* Safari chrome*/ display: flex; /*主轴方向*/ flex-direction: row; /*主轴中点对齐*/ justify-content:center; /*交叉轴中点对齐*/ align-items:center; align-content:center; /*!*换行*!*/ flex-wrap: wrap; margin: 0 1em 0 -1em; width: 100%; height:830px;&#125;/*菱形div*/.ling &#123; z-index:1; /*margin-top:10px;*/ /*border: 0 solid red;*/ width: 145px; height: 145px; /*倾斜拉伸*/ -webkit-transform:matrix(0.93,1.52,-0.93,1.52,0,0); padding:5px; /*无边框*/ box-shadow: inset 0 0 white, inset 0 0 #bbb, inset 0 0 #d7d7d7, inset 0 0 #d7d7d7; border-radius: 10%; /*在div中菱形位置*/ position: absolute; left: 2.6em; top: 6.4em;&#125;.hiding &#123; /*padding:5px;*/ z-index:0; height: 100%; width: 100%; position: absolute; left: 0; top: 0; margin: auto;&#125;.ling_1&#123; position: relative; bottom: 4.5em; right: 0; margin-right: -3.5em; /*div大小*/ width: 256px; height: 414px;&#125;.ling_2&#123; position: relative; top: 9em; right: 0; margin-right: -3em; width: 256px; height: 414px;&#125;.ling_3&#123; position: relative; bottom: 2em; width: 256px; height: 414px;&#125;.ling_4&#123; position: relative; top: 9em; left: 0; margin-left: -3em; width: 256px; height: 414px;&#125;.ling_5&#123; position: relative; bottom: 4.5em; left: 0; margin-left: -3.5em; width: 256px; height: 414px;&#125; 说一下结构。首先写一个大容器 box。这个box中是flex布局：这里边有一个交叉轴（y轴）以及n个主轴（x轴）；n是几你自己定义换行就行了，代码中有。 再定义5个菱形菱1菱2菱3菱4菱5，他们都是用公共的样式ling。在各自的私有样式中调各自的位置。使用position: relative;bottom: 4.5em；left: 0; 来调节很简单。（这里注意，我使用em做距离到位是不对的，换成百分比或者px）flex加postion能多出任何想要的布局。","tags":[{"name":"web","slug":"web","permalink":"http://zhangjiading.com/tags/web/"}]},{"title":"安卓基础小技巧（一）","date":"2017-03-08T06:09:14.000Z","path":"2017/03/08/安卓基础小技巧（一）/","text":"1.安卓5.1状态栏透明 曾经以为还会更新的，自从一脚踏进前端这个可能。。。。。。。。 12345678910111213//状态栏透明 getWindow().requestFeature(Window.FEATURE_NO_TITLE); if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123; Window window = getWindow(); window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS | WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION); window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_LAYOUT_STABLE); window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); window.setStatusBarColor(Color.TRANSPARENT); window.setNavigationBarColor(Color.TRANSPARENT); &#125; 2.SharedPreferences，判断是否第一次进入APP 照着抄吧，现在我自己都看不懂….. 12345678910111213141516171819 boolean isFirstIn = false; private static final String SHAREDPREFERENCES_NAME = &quot;first_pref&quot;;SharedPreferences preferences = getSharedPreferences( SHAREDPREFERENCES_NAME, MODE_PRIVATE);isFirstIn = preferences.getBoolean(&quot;isFirstIn&quot;, true); // 判断程序与第几次运行，如果是第一次运行则跳转到引导界面，否则跳转到主界面 if (!isFirstIn) &#123; // 使用Handler的postDelayed方法，3秒后执行跳转到MainActivity goMain(); &#125; else &#123; SharedPreferences.Editor edit = getSharedPreferences( SHAREDPREFERENCES_NAME, MODE_PRIVATE).edit(); edit.putBoolean(&quot;isFirstIn&quot;,false); edit.apply(); goGuide(); &#125;","tags":[{"name":"安卓","slug":"安卓","permalink":"http://zhangjiading.com/tags/安卓/"}]},{"title":"Hexo-Github搭建个人博客","date":"2017-03-07T06:27:02.000Z","path":"2017/03/07/Hexo-Github搭建个人博客/","text":"1.参考和准备 参考 简书hexo教程 和油条教程 。 准备node.js 、github账号&amp;git软件 最重要的是！！！会用github pages，我就是这里被坑了一下记忆犹新，Github Pages教程。 2.开工！（1）找个你喜欢的旮旯创建一个文件夹，路径名最好英文 如：blog。用于存放博客文件。然后点进去，右键git bash；执行去下命令： 1npm install （2）再执行init命令初始化hexo： 1hexo init 到这里安装工作已经完成，blog就是你的博客根目录，所有的操作、文件都在里面进行。 （3）生成静态页面 1hexo generate（hexo g也可以） （4）本地启动 启动本地服务，进行文章预览调试： 1hexo server 浏览器输入 http://localhost:4000 就能看见博客最初的样子了 （5）配置git 打开 blog根目录 找到 vim _config.yml 用编辑器打开 翻到最下面，改成我这样子的 1deploy: 1type: git 1repo: https://github.com/leopardpan/leopardpan.github.io.git 1branch: master 地址必须是你自己仓库的名字 执行 1npm install hexo-deployer-git --save 然后三连步套餐： 1hexo clean 1hexo generate 1hexo deploy 2.一些常用命令！ hexo new”postName” #新建文章 hexo new page”pageName” #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server） hexo deploy #将.deploy目录部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本","tags":[{"name":"hexo","slug":"hexo","permalink":"http://zhangjiading.com/tags/hexo/"}]},{"title":" I am back","date":"2017-03-06T12:52:01.000Z","path":"2017/03/06/I-am-back/","text":"111111111111111","tags":[{"name":"随笔","slug":"随笔","permalink":"http://zhangjiading.com/tags/随笔/"}]}]